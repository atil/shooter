// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Shooter {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.IOC;
    using uFrame.Kernel;
    using uFrame.MVVM;
    
    
    public class GameSubsystemLoaderBase : uFrame.Kernel.SystemLoader {
        
        private GameController _GameController;
        
        private ShipController _ShipController;
        
        private PlayerShipController _PlayerShipController;
        
        [uFrame.IOC.InjectAttribute()]
        public virtual GameController GameController {
            get {
                if (_GameController==null) {
                    _GameController = Container.CreateInstance(typeof(GameController)) as GameController;;
                }
                return _GameController;
            }
            set {
                _GameController = value;
            }
        }
        
        [uFrame.IOC.InjectAttribute()]
        public virtual ShipController ShipController {
            get {
                if (_ShipController==null) {
                    _ShipController = Container.CreateInstance(typeof(ShipController)) as ShipController;;
                }
                return _ShipController;
            }
            set {
                _ShipController = value;
            }
        }
        
        [uFrame.IOC.InjectAttribute()]
        public virtual PlayerShipController PlayerShipController {
            get {
                if (_PlayerShipController==null) {
                    _PlayerShipController = Container.CreateInstance(typeof(PlayerShipController)) as PlayerShipController;;
                }
                return _PlayerShipController;
            }
            set {
                _PlayerShipController = value;
            }
        }
        
        public override void Load() {
            Container.RegisterViewModelManager<GameViewModel>(new ViewModelManager<GameViewModel>());
            Container.RegisterController<GameController>(GameController);
            Container.RegisterViewModelManager<ShipViewModel>(new ViewModelManager<ShipViewModel>());
            Container.RegisterController<ShipController>(ShipController);
            Container.RegisterViewModelManager<PlayerShipViewModel>(new ViewModelManager<PlayerShipViewModel>());
            Container.RegisterController<PlayerShipController>(PlayerShipController);
        }
    }
}

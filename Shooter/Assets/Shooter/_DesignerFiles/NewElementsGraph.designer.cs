// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;


[DiagramInfoAttribute("Shooter")]
public class GameViewModelBase : ViewModel {
    
    public GameViewModelBase(GameControllerBase controller, bool initialize = true) : 
            base(controller, initialize) {
    }
    
    public GameViewModelBase() : 
            base() {
    }
    
    public override void Bind() {
        base.Bind();
    }
}

public partial class GameViewModel : GameViewModelBase {
    
    public GameViewModel(GameControllerBase controller, bool initialize = true) : 
            base(controller, initialize) {
    }
    
    public GameViewModel() : 
            base() {
    }
    
    protected override void WireCommands(Controller controller) {
    }
    
    public override void Write(ISerializerStream stream) {
		base.Write(stream);
    }
    
    public override void Read(ISerializerStream stream) {
		base.Read(stream);
    }
    
    public override void Unbind() {
        base.Unbind();
    }
    
    protected override void FillProperties(List<ViewModelPropertyInfo> list) {
        base.FillProperties(list);;
    }
    
    protected override void FillCommands(List<ViewModelCommandInfo> list) {
        base.FillCommands(list);;
    }
}

[DiagramInfoAttribute("Shooter")]
public class ShipViewModelBase : ViewModel {
    
    public ShipViewModelBase(ShipControllerBase controller, bool initialize = true) : 
            base(controller, initialize) {
    }
    
    public ShipViewModelBase() : 
            base() {
    }
    
    public override void Bind() {
        base.Bind();
    }
}

public partial class ShipViewModel : ShipViewModelBase {
    
    public ShipViewModel(ShipControllerBase controller, bool initialize = true) : 
            base(controller, initialize) {
    }
    
    public ShipViewModel() : 
            base() {
    }
    
    protected override void WireCommands(Controller controller) {
    }
    
    public override void Write(ISerializerStream stream) {
		base.Write(stream);
    }
    
    public override void Read(ISerializerStream stream) {
		base.Read(stream);
    }
    
    public override void Unbind() {
        base.Unbind();
    }
    
    protected override void FillProperties(List<ViewModelPropertyInfo> list) {
        base.FillProperties(list);;
    }
    
    protected override void FillCommands(List<ViewModelCommandInfo> list) {
        base.FillCommands(list);;
    }
}

[DiagramInfoAttribute("Shooter")]
public class PlayerShipViewModelBase : ShipViewModel {
    
    public PlayerShipViewModelBase(PlayerShipControllerBase controller, bool initialize = true) : 
            base(controller, initialize) {
    }
    
    public PlayerShipViewModelBase() : 
            base() {
    }
    
    public override void Bind() {
        base.Bind();
    }
}

public partial class PlayerShipViewModel : PlayerShipViewModelBase {
    
    public PlayerShipViewModel(PlayerShipControllerBase controller, bool initialize = true) : 
            base(controller, initialize) {
    }
    
    public PlayerShipViewModel() : 
            base() {
    }
    
    protected override void WireCommands(Controller controller) {
        base.WireCommands(controller);
    }
    
    public override void Write(ISerializerStream stream) {
		base.Write(stream);
    }
    
    public override void Read(ISerializerStream stream) {
		base.Read(stream);
    }
    
    public override void Unbind() {
        base.Unbind();
    }
    
    protected override void FillProperties(List<ViewModelPropertyInfo> list) {
        base.FillProperties(list);;
    }
    
    protected override void FillCommands(List<ViewModelCommandInfo> list) {
        base.FillCommands(list);;
    }
}

[DiagramInfoAttribute("Shooter")]
public class BulletViewModelBase : ViewModel {
    
    public BulletViewModelBase(BulletControllerBase controller, bool initialize = true) : 
            base(controller, initialize) {
    }
    
    public BulletViewModelBase() : 
            base() {
    }
    
    public override void Bind() {
        base.Bind();
    }
}

public partial class BulletViewModel : BulletViewModelBase {
    
    public BulletViewModel(BulletControllerBase controller, bool initialize = true) : 
            base(controller, initialize) {
    }
    
    public BulletViewModel() : 
            base() {
    }
    
    protected override void WireCommands(Controller controller) {
    }
    
    public override void Write(ISerializerStream stream) {
		base.Write(stream);
    }
    
    public override void Read(ISerializerStream stream) {
		base.Read(stream);
    }
    
    public override void Unbind() {
        base.Unbind();
    }
    
    protected override void FillProperties(List<ViewModelPropertyInfo> list) {
        base.FillProperties(list);;
    }
    
    protected override void FillCommands(List<ViewModelCommandInfo> list) {
        base.FillCommands(list);;
    }
}
